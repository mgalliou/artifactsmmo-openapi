/*
 * Artifacts API
 *
 *  Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 
 *
 * The version of the OpenAPI document: 6.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GiveItemDataSchema {
    /// Cooldown details.
    #[serde(rename = "cooldown")]
    pub cooldown: Box<models::CooldownSchema>,
    /// Items given.
    #[serde(rename = "items")]
    pub items: Vec<models::SimpleItemSchema>,
    /// Character details of the receiving character.
    #[serde(rename = "receiver_character")]
    pub receiver_character: Box<models::CharacterSchema>,
    /// Character details of the sending character.
    #[serde(rename = "character")]
    pub character: Box<models::CharacterSchema>,
}

impl GiveItemDataSchema {
    pub fn new(cooldown: models::CooldownSchema, items: Vec<models::SimpleItemSchema>, receiver_character: models::CharacterSchema, character: models::CharacterSchema) -> GiveItemDataSchema {
        GiveItemDataSchema {
            cooldown: Box::new(cooldown),
            items,
            receiver_character: Box::new(receiver_character),
            character: Box::new(character),
        }
    }
}

