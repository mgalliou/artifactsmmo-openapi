/*
 * Artifacts API
 *
 *  Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 
 *
 * The version of the OpenAPI document: 4.3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MapContentType {
    #[serde(rename = "monster")]
    Monster,
    #[serde(rename = "resource")]
    Resource,
    #[serde(rename = "workshop")]
    Workshop,
    #[serde(rename = "bank")]
    Bank,
    #[serde(rename = "grand_exchange")]
    GrandExchange,
    #[serde(rename = "tasks_master")]
    TasksMaster,
    #[serde(rename = "npc")]
    Npc,

}

impl std::fmt::Display for MapContentType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Monster => write!(f, "monster"),
            Self::Resource => write!(f, "resource"),
            Self::Workshop => write!(f, "workshop"),
            Self::Bank => write!(f, "bank"),
            Self::GrandExchange => write!(f, "grand_exchange"),
            Self::TasksMaster => write!(f, "tasks_master"),
            Self::Npc => write!(f, "npc"),
        }
    }
}

impl Default for MapContentType {
    fn default() -> MapContentType {
        Self::Monster
    }
}

