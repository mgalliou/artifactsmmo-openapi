/*
 * Artifacts API
 *
 *  Artifacts is an API-based MMO game where you can manage 5 characters to explore, fight, gather resources, craft items and much more.  Website: https://artifactsmmo.com/  Documentation: https://docs.artifactsmmo.com/  OpenAPI Spec: https://api.artifactsmmo.com/openapi.json 
 *
 * The version of the OpenAPI document: 6.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CharacterFightSchema {
    /// The result of the fight.
    #[serde(rename = "result")]
    pub result: models::FightResult,
    /// Numbers of the turns of the combat.
    #[serde(rename = "turns")]
    pub turns: i32,
    /// The code of the monster fought.
    #[serde(rename = "opponent")]
    pub opponent: String,
    /// The fight logs.
    #[serde(rename = "logs")]
    pub logs: Vec<String>,
    /// Results for each character.
    #[serde(rename = "characters")]
    pub characters: Vec<models::CharacterMultiFightResultSchema>,
}

impl CharacterFightSchema {
    pub fn new(result: models::FightResult, turns: i32, opponent: String, logs: Vec<String>, characters: Vec<models::CharacterMultiFightResultSchema>) -> CharacterFightSchema {
        CharacterFightSchema {
            result,
            turns,
            opponent,
            logs,
            characters,
        }
    }
}

